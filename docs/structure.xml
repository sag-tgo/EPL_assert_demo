<?xml version="1.0" encoding="UTF-8" standalone="no"?><Packages><Package depth="../../../" display="com.apamax.test" name="com.apamax.test"><Type category="Event" name="Assert"><Description><![CDATA[An assertion event to help with testing EPL applications. Monitor-global instances of this event that are auto-initialized by the correlator will default to log failed assertions at ERROR. If you wish to be explicit or change the default behavior, initialise the instance with one of the create* actions. Instances of events that are local variables need to be explicitly initialized.]]></Description><Summary><![CDATA[An assertion event to help with testing EPL applications. Monitor-global instances of this event that are auto-initialized by the correlator will default to log failed assertions at ERROR. If you wish to be explicit or change the default behavior, initialise the instance with one of the create* actions. Instances of events that are local variables need to be explicitly initialized.]]></Summary><TypeParameters/><Version><Description><![CDATA[0.2]]></Description></Version><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="DEFAULT_MESSAGE_PREFIX" private="true" type="string" typeValue="&quot;Assertion failed: &quot;"><Description/><Summary/><TypeParameters/></Member><Member name="initialized" private="true" type="boolean"><Description/><Summary/><TypeParameters/></Member><Member name="onFailedAssertion" type="action"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[An action which takes one string paremeter which is invoked if an assertion fails.]]></Description><Summary><![CDATA[An action which takes one string paremeter which is invoked if an assertion fails.]]></Summary><TypeParameters/></Member><Member name="enabled" type="boolean"><Description><![CDATA[Enabled/disabled flag. This allows an assert instance to be turned on/off at runtime if desired.]]></Description><Summary><![CDATA[Enabled/disabled flag. This allows an assert instance to be turned on/off at runtime if desired.]]></Summary><TypeParameters/></Member><Member name="messagePrefix" type="string"><Description><![CDATA[Prefix on assertion failure messages.]]></Description><Summary><![CDATA[Prefix on assertion failure messages.]]></Summary><TypeParameters/></Member><Action name="equal" staticNature=""><Description><![CDATA[Assert that actual = expected. Note: This is a deep equality check because EPL's = and != operator are deep equality operators.]]></Description><Summary><![CDATA[Assert that actual = expected. Note: This is a deep equality check because EPL's = and != operator are deep equality operators.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="actual" type="any"><Description><![CDATA[the actual value.]]></Description></Parameter><Parameter name="expected" type="any"><Description><![CDATA[the expected value.]]></Description></Parameter><Parameter name="what" type="string"><Description><![CDATA[description of actual.]]></Description></Parameter></Parameters></Action><Action name="init" private="true" staticNature=""><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="fail" staticNature=""><Description><![CDATA[Fail an assertion.]]></Description><Summary><![CDATA[Fail an assertion.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="message" type="string"><Description><![CDATA[the reason for the assertion failure.]]></Description></Parameter></Parameters></Action><Action name="isTrue" staticNature=""><Description><![CDATA[Assert that value is true.]]></Description><Summary><![CDATA[Assert that value is true.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="boolean"><Description><![CDATA[the value that is being asserted is true.]]></Description></Parameter><Parameter name="what" type="string"><Description><![CDATA[description of value.]]></Description></Parameter></Parameters></Action><Action name="isLessThan" staticNature=""><Description><![CDATA[Assert that actual < max.]]></Description><Summary><![CDATA[Assert that actual < max.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="actual" type="any"><Description><![CDATA[the actual value]]></Description></Parameter><Parameter name="max" type="any"><Description><![CDATA[the value that 'actual' should be less than.]]></Description></Parameter><Parameter name="what" type="string"><Description><![CDATA[description of actual.]]></Description></Parameter></Parameters></Action><Action name="logAtError" private="true" staticNature="static "><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="message" type="string"><Description><![CDATA[the message to log.]]></Description></Parameter></Parameters></Action><Action name="isGreaterThan" staticNature=""><Description><![CDATA[Assert that actual > min.]]></Description><Summary><![CDATA[Assert that actual > min.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="actual" type="any"><Description><![CDATA[the actual value]]></Description></Parameter><Parameter name="min" type="any"><Description><![CDATA[the value that 'actual' should be greater than.]]></Description></Parameter><Parameter name="what" type="string"><Description><![CDATA[description of actual.]]></Description></Parameter></Parameters></Action><Action name="create" staticNature="static "><Description><![CDATA[Create an instance of an Assert event. The instance will be enabled.]]></Description><Summary><![CDATA[Create an instance of an Assert event. The instance will be enabled.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.apamax.test" type="Assert"/><Parameters><Parameter name="failedAssertCallback" type="action"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The action to invoke if an assertion fails.]]></Description></Parameter></Parameters></Action><Action name="notEqual" staticNature=""><Description><![CDATA[Assert that actual != unexpected. Note: This is a deep equality check because EPL's = and != operator are deep equality operators.]]></Description><Summary><![CDATA[Assert that actual != unexpected. Note: This is a deep equality check because EPL's = and != operator are deep equality operators.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="actual" type="any"><Description><![CDATA[the actual value.]]></Description></Parameter><Parameter name="unexpected" type="any"><Description><![CDATA[the unexpected value.]]></Description></Parameter><Parameter name="what" type="string"><Description><![CDATA[description of actual.]]></Description></Parameter></Parameters></Action><Action name="isFalse" staticNature=""><Description><![CDATA[Assert that value is false.]]></Description><Summary><![CDATA[Assert that value is false.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="boolean"><Description><![CDATA[the value that is being asserted is false.]]></Description></Parameter><Parameter name="what" type="string"><Description><![CDATA[description of value.]]></Description></Parameter></Parameters></Action><Action name="isInRange" staticNature=""><Description><![CDATA[Assert that min <= actual <= max.]]></Description><Summary><![CDATA[Assert that min <= actual <= max.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="actual" type="any"><Description><![CDATA[the value that should be within the range.]]></Description></Parameter><Parameter name="min" type="any"><Description><![CDATA[the minimum value.]]></Description></Parameter><Parameter name="max" type="any"><Description><![CDATA[the maximum value.]]></Description></Parameter><Parameter name="what" type="string"><Description><![CDATA[description of actual.]]></Description></Parameter></Parameters></Action><Action name="createOpt" staticNature="static "><Description><![CDATA[Create an instance of an Assert event.]]></Description><Summary><![CDATA[Create an instance of an Assert event.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.apamax.test" type="Assert"/><Parameters><Parameter name="enabled" type="boolean"><Description><![CDATA[true = enabled, false = disabled.]]></Description></Parameter><Parameter name="failedAssertCallback" type="action"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The action to invoke if an assertion fails.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="AssertHelper"><Description><![CDATA[An event providing static actions to help using the Assert event.]]></Description><Summary><![CDATA[An event providing static actions to help using the Assert event.]]></Summary><TypeParameters/><Version><Description><![CDATA[0.1]]></Description></Version><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Action name="throwWithError" staticNature="static "><Description><![CDATA[Logs message at ERROR then throws a FailedAssertException.]]></Description><Summary><![CDATA[Logs message at ERROR then throws a FailedAssertException.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="message" type="string"><Description><![CDATA[- the message to log and to go with the exception.]]></Description></Parameter></Parameters></Action><Action name="isLoggingAtDebug" staticNature="static "><Description><![CDATA[Check if this monitor will log at DEBUG or not.]]></Description><Summary><![CDATA[Check if this monitor will log at DEBUG or not.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[true if the monitor this is called from is configured to log at DEBUG (or TRACE), false otherwise.]]></Description></Returns></Action><Action name="dieWithError" staticNature="static "><Description><![CDATA[Logs message at ERROR then terminates the monitor with the die statement.]]></Description><Summary><![CDATA[Logs message at ERROR then terminates the monitor with the die statement.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="message" type="string"><Description><![CDATA[- the message to log.]]></Description></Parameter></Parameters></Action><Action name="logAtError" staticNature="static "><Description><![CDATA[Logs message at ERROR.]]></Description><Summary><![CDATA[Logs message at ERROR.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="message" type="string"><Description><![CDATA[- the message to log.]]></Description></Parameter></Parameters></Action><Action name="isConfigEnabled" staticNature="static "><Description><![CDATA[Checks if the given configuration key is true. See Apama documentation for Component.getConfigProperties() and for how to configure the correlator via YAML or command line arguments. If the given key does not exist, this action will return false. This action will return true if the value associated with the configuration key is "true" (case insensitive).]]></Description><Summary><![CDATA[Checks if the given configuration key is true. See Apama documentation for Component.getConfigProperties() and for how to configure the correlator via YAML or command line arguments. If the given key does not exist, this action will return false. This action will return true if the value associated with the configuration key is "true" (case insensitive).]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[true if the configuration option is enabled, false otherwise.]]></Description></Returns><Parameters><Parameter name="key" type="string"><Description><![CDATA[the config key to look up.]]></Description></Parameter></Parameters></Action></Type></Package></Packages>